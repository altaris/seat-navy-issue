components:
  schemas:
    EsiRequestIn:
      description: Data to be forwarded to the ESI
      properties:
        on_behalf_of:
          title: On Behalf Of
          type: integer
        params:
          default: {}
          title: Params
          type: object
      title: EsiRequestIn
      type: object
    EsiRequestOut:
      description: SNI response to an ESI request
      properties:
        data:
          title: Data
        headers:
          title: Headers
          type: object
        status_code:
          title: Status Code
          type: integer
      required:
      - status_code
      title: EsiRequestOut
      type: object
    GetTokenOut:
      description: Model for ``GET /token`` responses.
      properties:
        callback:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Callback
          type: string
        comments:
          title: Comments
          type: string
        created_on:
          format: date-time
          title: Created On
          type: string
        expires_on:
          format: date-time
          title: Expires On
          type: string
        owner_character_id:
          title: Owner Character Id
          type: integer
        parent:
          format: uuid
          title: Parent
          type: string
        token_type:
          enum:
          - dyn
          - per
          - use
          title: Token Type
          type: string
        uuid:
          format: uuid
          title: Uuid
          type: string
      required:
      - created_on
      - owner_character_id
      - token_type
      - uuid
      title: GetTokenOut
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    PostTokenDynIn:
      description: Model for ``POST /token/dyn`` requests.
      properties:
        callback:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Callback
          type: string
        comments:
          title: Comments
          type: string
      required:
      - callback
      title: PostTokenDynIn
      type: object
    PostTokenDynOut:
      description: Model for ``POST /token/dyn`` reponses.
      properties:
        app_token:
          title: App Token
          type: string
      required:
      - app_token
      title: PostTokenDynOut
      type: object
    PostTokenPerIn:
      description: Model for ``POST /token/per`` requests.
      properties:
        callback:
          format: uri
          maxLength: 65536
          minLength: 1
          title: Callback
          type: string
        comments:
          title: Comments
          type: string
      required:
      - callback
      title: PostTokenPerIn
      type: object
    PostTokenPerOut:
      description: Model for ``POST /token/per`` reponses.
      properties:
        app_token:
          title: App Token
          type: string
      required:
      - app_token
      title: PostTokenPerOut
      type: object
    PostTokenUseFromDynIn:
      description: Model for ``POST /token/use/from/dyn`` requests.
      properties:
        scopes:
          default:
          - publicData
          items:
            type: string
          title: Scopes
          type: array
      title: PostTokenUseFromDynIn
      type: object
    PostTokenUseFromDynOut:
      description: Model for ``POST /token/use/from/dyn`` reponses.
      properties:
        login_url:
          title: Login Url
          type: string
        state_code:
          title: State Code
          type: string
      required:
      - login_url
      - state_code
      title: PostTokenUseFromDynOut
      type: object
    PostUseFromPerOut:
      description: Model for ``POST /token/use/from/per`` reponses.
      properties:
        user_token:
          title: User Token
          type: string
      required:
      - user_token
      title: PostUseFromPerOut
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: FastAPI
  version: 0.1.0
openapi: 3.0.2
paths:
  /callback/esi:
    get:
      description: "ESI callback.\n\nNotifies the app with by issuing a POST request\
        \ to the predefined app\ncallback, using the :class:`sni.apimodels.PostCallbackEsiOut`\
        \ model.\n\nReference:\n    `OAuth 2.0 for Web Based Applications <https://docs.esi.evetech.net/docs/sso/web_based_sso_flow.html>`_"
      operationId: get_callback_esi_callback_esi_get
      parameters:
      - in: query
        name: code
        required: true
        schema:
          title: Code
          type: string
      - in: query
        name: state
        required: true
        schema:
          title: State
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Callback Esi
      tags:
      - Callbacks
      - ESI
  /esi/{esi_path}:
    get:
      description: "Forwards a GET request to the ESI.\n\nSee also:\n    :class:`sni.routers.esi.EsiRequestIn`"
      operationId: get_esi_latest_esi__esi_path__get
      parameters:
      - in: path
        name: esi_path
        required: true
        schema:
          title: Esi Path
          type: string
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EsiRequestOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Esi Latest
      tags:
      - ESI
  /ping:
    get:
      description: Returns ``pong``.
      operationId: get_ping_ping_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Ping
      tags:
      - Testing
  /token:
    delete:
      description: Deletes a token
      operationId: delete_token_token_delete
      parameters:
      - in: query
        name: uuid
        required: true
        schema:
          title: Uuid
          type: string
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Token
    get:
      description: Returns informations about the token currently being used.
      operationId: get_token_token_get
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Token
  /token/dyn:
    post:
      description: 'Creates a new dynamic app token.


        Must be called with a permanent app token.'
      operationId: post_token_dyn_token_dyn_post
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTokenDynIn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTokenDynOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Token Dyn
      tags:
      - Authentication
  /token/per:
    post:
      description: 'Creates a new permanent app token.


        Must be called with a permanent app token.'
      operationId: post_token_per_token_per_post
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTokenPerIn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTokenPerOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Token Per
      tags:
      - Authentication
  /token/use/from/dyn:
    post:
      description: 'Authenticates an application dynamic token and returns a `state
        code` and

        an URL at which the user can authenticate to the EVE SSO. Once that is

        done, SNI issues a GET request to the app predefined callback, with that

        state code and the user token.'
      operationId: post_token_use_from_dyn_token_use_from_dyn_post
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTokenUseFromDynIn'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTokenUseFromDynOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Token Use From Dyn
      tags:
      - Authentication
  /token/use/from/per:
    post:
      description: 'Authenticates an application permanent token and returns a user
        token tied

        to the owner of that app token.'
      operationId: post_token_use_from_per_token_use_from_per_post
      parameters:
      - in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUseFromPerOut'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Post Token Use From Per
      tags:
      - Authentication

